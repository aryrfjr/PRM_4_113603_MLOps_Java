services:

  # TODO: Avoid production impact by creating a docker-compose.dev.ym

  # PostgreSQL database service
  # Uses a public official image (no build needed)
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: mlops
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
    networks:
      - mlopsnet

  # MLOps REST API with Spring Framework
  mlops-api:
    build: .
    depends_on:
      - db
    ports:
      - "8080:8080"
    volumes:
      - /home/aryjr/fromiomega/pos-doc/UFSCar/MG-NMR:/data  # raw data accessible to the API
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mlops
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - mlopsnet

# Docker networks
networks:
  mlopsnet:
    driver: bridge

# Docker-managed persistent volume for PostgreSQL data
volumes:
  postgres_data:
